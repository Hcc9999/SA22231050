// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// binarySearchC
int binarySearchC(NumericVector x, double target);
RcppExport SEXP _SA22231050_binarySearchC(SEXP xSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(binarySearchC(x, target));
    return rcpp_result_gen;
END_RCPP
}
// newtonMethodC
double newtonMethodC(double x0, double tol, int max_iter);
RcppExport SEXP _SA22231050_newtonMethodC(SEXP x0SEXP, SEXP tolSEXP, SEXP max_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(newtonMethodC(x0, tol, max_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SA22231050_binarySearchC", (DL_FUNC) &_SA22231050_binarySearchC, 2},
    {"_SA22231050_newtonMethodC", (DL_FUNC) &_SA22231050_newtonMethodC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_SA22231050(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
